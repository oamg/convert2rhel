summary: |
    Checks after conversion
description: |
    This set of checks looks at the system that has been freshly converted to see whether it has all signs of a
    successfully converted system. As an example one of the checks looks at /etc/system-release to see if it has
    the "Red Hat Enterprise Linux" string.

tag+:
    - checks-after-conversion

link:
  - https://issues.redhat.com/browse/RHELC-664
  - https://issues.redhat.com/browse/RHELC-411
  - https://issues.redhat.com/browse/RHELC-291

order: 52


/sanity:
    summary+:
        Sanity check
    /rhel_in_os_release:
        summary+: |
            RHEL present in /etc/os-release
        description: |
            Sanity check to verify, that Red Hat Enterprise Linux is present in /etc/os-release
        test: pytest -m test_conversion_sanity_rhel_in_os_release

    /correct_distro:
        summary+: |
            Correct distro
        description+: |
            Verify, that the conversion successfully converted to the correct target system.
        test: pytest -m test_correct_distro


/data_collection:
    summary+: |
        Data collection
    description: |
        Verify that after conversion the convert2rhel.facts file exists.
    test: pytest -m test_check_data_collection


/deleted_temporary_folder:
    summary+: |
        Temporary folder deleted
    description: |
        Verify, that the temporary folder `/var/lib/convert2rhel/` was successfully removed after the conversion.
    test: pytest -m test_deleted_temporary_folder


/enabled_repositories:
    summary+: |
        Required repositories enabled
    description: |
        Verify, that the suitable repositories are enabled after the conversion.
        When running the conversion with the non-EUS RHSM account method scenario
        (meaning the account does not have the EUS repositories enabled by default and the source system is EUS),
        verify that the non-EUS repositories are enabled after conversion.
        When running the conversion on an EUS machine with an EUS RHSM account
        verify that the EUS repositories are enabled after the conversion.
    test: pytest -m test_enabled_repositories


/flag_system_as_converted:
    summary+: |
        Flag system as converted
    description: |
        Verify, that the breadcrumbs file was created and corresponds to the JSON schema after the conversion.
    test: pytest -m test_flag_system_as_converted


/log_lines_not_duplicated:
    summary+: Logged lines are not duplicated
    # TODO (danmyway) remove when the https://issues.redhat.com/browse/RHELC-969 gets resolved
    result: info
    description+: |
        Iterate over the log file and check that the lines are unique and not duplicated.
    tag+:
        - log-file
    test: pytest -m test_verify_logging_is_not_duplicated


/rhel_kernel:
    summary+: |
        Installed kernels signed by Red Hat
    description+: |
        Verify, that each of installed kernels on the system is signed by Red Hat.
    tag+:
        - rhel-kernel
    test: pytest -m test_rhel_kernel


/rhel_subman:
    summary+: |
        Installed subscription-manager signed by Red Hat
    description+: |
        Verify, that the installed subscription-manager is signed by Red Hat.
        The package should be signed by Red Hat for both scenarios -
        either replaced or installed by convert2rhel.
    tag+:
        - rhel-subman
    test: pytest -m test_rhel_subscription_manager

/verify_string_in_log:
    summary+: |
        Requested string is present in logfile
    description+: |
        Essentially a sanity check verifying required strings are present in a logfile.
        In some cases, we do not need to catch an output during the conversion
        as it is sufficient to verify it after the conversion has finished.
    tag+:
        - verify-string-in-log

    /initramfs_and_vmlinuz_present:
        summary+: |
            initramfs and vmlinuz files are valid
        description+: |
            Verify that after a successful conversion the kernel boot files are present.
            Our criteria, in this case, are related to the `check_kernel_boot_files()`
            finding the two necessary boot files (initramfs and vmlinuz),
            and validating that the initramfs file is not corrupted.
        tag+:
            - initramfs-and-vmlinuz-present
        test: pytest -m test_initramfs_and_vmlinuz_present

    /failed_to_parse_package_not_present:
        summary+: |
            Failed to parse a package not present
        description+: |
            Verify that in case of package with the `arch` field missing in its information,
            the message Failed to parse a package does not appear during the conversion run.
        tag+:
            - failed-to-parse-package-not-present
        test: pytest -m test_failed_to_parse_package_info_empty_arch_not_present

    /traceback_not_present:
        summary+: |
            No traceback raised
        description+: |
            Verify that there is not a traceback raised in the log file during the conversion run.
        tag+:
            - traceback-not-present
        test: pytest -m test_traceback_not_present

/yum_check:
    summary+: |
        Run yum check
    description+: |
        After conversion check verifying yum check is able to finis without any issues.
    test: pytest -m test_yum_check

/check_firewalld_errors:
    summary+: |
        Firewalld issues after the conversion
    description+: |
        Verify that firewalld is not reporting any issues in the logs.
    test: pytest -m check_firewalld_errors
