name: tmt@TF

on:
  pull_request_target:
    types: [
      # Default types from `pull_request_target` event
      opened, synchronize, reopened,
      # Trigger on labels
      labeled
    ]
    branches: [ main ]

jobs:
  wait_for_rpm_builds:
    name: Wait for CI Checks
    runs-on: ubuntu-latest
    steps:
      - name: Wait for CI Checks
        uses: r0x0d/wait-for-ci-checks@main
        id: status_check
        with:
          ref: "${{ github.event.pull_request.head.sha }}"
          checkNames: "rpm-build:epel-7-x86_64;rpm-build:epel-8-x86_64"
    if: |
      github.event.pull_request
      && (
        contains(fromJson('["OWNER", "MEMBER", "COLLABORATOR"]'), github.event.pull_request.author_association)
        || contains(github.event.pull_request.labels.*.name, 'testing')
      )

  call_workflow_get_copr_id:
    needs: [wait_for_rpm_builds]
    uses: ./.github/workflows/reuse-get-copr-id.yml

  convert_distros_to_matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix_epel7: ${{ steps.convert_distros_to_matrix.outputs.matrix_epel7 }}
      matrix_epel8: ${{ steps.convert_distros_to_matrix.outputs.matrix_epel8 }}
    steps:
      - id: convert_distros_to_matrix
        run: |
          echo "::set-output name=matrix_epel7::{\"include\":[{\"compose\": \"CentOS-7-latest\", \"distro\": \"centos-7\"},{\"compose\": \"Oracle-Linux-7.9\", \"distro\": \"oraclelinux-7\"}]}"
          echo "::set-output name=matrix_epel8::{\"include\":[{\"compose\": \"CentOS-8.4\", \"distro\": \"centos-8.4\"},{\"compose\": \"CentOS-8-latest\", \"distro\": \"centos-8\"},{\"compose\": \"Oracle-Linux-8.4\", \"distro\": \"oraclelinux-8.4\"},{\"compose\": \"Oracle-Linux-8.6\", \"distro\": \"oraclelinux-8.6\"}]}"

  # Tier 0 integration tests
  call_workflow_integration_tests_epel_7_tier0:
    needs: [call_workflow_get_copr_id, convert_distros_to_matrix]
    uses: ./.github/workflows/reuse-int-tests.yml
    with:
      copr: "epel-7-x86_64"
      copr_artifacts: ${{ needs.call_workflow_get_copr_id.outputs.artifacts }}
      tmt_plan_regex: "^(.*tier0)"
      matrix: ${{ needs.convert_distros_to_matrix.outputs.matrix_epel7 }}
      pull_request_status_name: "epel-7-tier0"
      git_ref: "refs/pull/${{ github.event.number }}/head"
      pr_head_sha: "${{ github.event.pull_request.head.sha }}"
    secrets: inherit

  call_workflow_integration_tests_epel_8_tier0:
    needs: [call_workflow_get_copr_id, convert_distros_to_matrix]
    uses: ./.github/workflows/reuse-int-tests.yml
    with:
      copr_artifacts: ${{ needs.call_workflow_get_copr_id.outputs.artifacts }}
      tmt_plan_regex: "^(.*tier0)"
      matrix: ${{ needs.convert_distros_to_matrix.outputs.matrix_epel8 }}
      pull_request_status_name: "epel-8-tier0"
      git_ref: "refs/pull/${{ github.event.number }}/head"
      pr_head_sha: "${{ github.event.pull_request.head.sha }}"
    secrets: inherit

  # Tier 1 integration tests
  call_workflow_integration_tests_epel_7_tier1:
    needs: [call_workflow_get_copr_id, convert_distros_to_matrix]
    uses: ./.github/workflows/reuse-int-tests.yml
    with:
      copr: "epel-7-x86_64"
      copr_artifacts: ${{ needs.call_workflow_get_copr_id.outputs.artifacts }}
      tmt_plan_regex: "^(.*tier1)"
      matrix: ${{ needs.convert_distros_to_matrix.outputs.matrix_epel7 }}
      pull_request_status_name: "epel-7-tier1"
      git_ref: "refs/pull/${{ github.event.number }}/head"
      pr_head_sha: "${{ github.event.pull_request.head.sha }}"
    secrets: inherit

  call_workflow_integration_tests_epel_8_tier1:
    needs: [call_workflow_get_copr_id, convert_distros_to_matrix]
    uses: ./.github/workflows/reuse-int-tests.yml
    with:
      copr_artifacts: ${{ needs.call_workflow_get_copr_id.outputs.artifacts }}
      tmt_plan_regex: "^(.*tier1)"
      matrix: ${{ needs.convert_distros_to_matrix.outputs.matrix_epel8 }}
      pull_request_status_name: "epel-8-tier1"
      git_ref: "refs/pull/${{ github.event.number }}/head"
      pr_head_sha: "${{ github.event.pull_request.head.sha }}"
    secrets: inherit
