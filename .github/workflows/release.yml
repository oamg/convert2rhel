---
name: Build release RPMs

on:
  release:
    types: [published]

jobs:
  build_el7_rpm:
    name: Build EL7 RPM
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # v4

        ### start manpage generation
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.10.13

      - name: Install dependencies
        run: |
          pip install argparse-manpage six pexpect

      - name: Install python3-rpm and python3-dnf package with apt-get
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-rpm python3-dnf

      - name: Generate Manpages
        run: |
          chmod +x scripts/manpage_generation.sh
          bash scripts/manpage_generation.sh
        ### end manpage generation

      - name: Build RPM package for EL7
        id: rpm_build_el7
        uses: oamg/rpmbuild@el7
        with:
          spec_path: "packaging/convert2rhel.spec"

      - name: Upload EL7 RPM as release asset
        id: upload_release_asset_el7
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ steps.rpm_build_el7.outputs.rpm_path }}
          asset_name: ${{ steps.rpm_build_el7.outputs.rpm_name }}
          asset_content_type: ${{ steps.rpm_build_el7.outputs.content_type }}

  build_el8_rpm:
    name: Build EL8 RPM
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

        ### start manpage generation
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.10.13

      - name: Install dependencies
        run: |
          pip install argparse-manpage six pexpect

      - name: Install python3-rpm and python3-dnf package with apt-get
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-rpm python3-dnf

      - name: Generate Manpages
        run: |
          chmod +x scripts/manpage_generation.sh
          bash scripts/manpage_generation.sh
        ### end manpage generation

      - name: Build RPM package for EL8
        id: rpm_build_el8
        uses: oamg/rpmbuild@el8
        with:
          spec_path: "packaging/convert2rhel.spec"

      - name: Upload EL8 RPM as release asset
        id: upload_release_asset_el8
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ steps.rpm_build_el8.outputs.rpm_path }}
          asset_name: ${{ steps.rpm_build_el8.outputs.rpm_name }}
          asset_content_type: ${{ steps.rpm_build_el8.outputs.content_type }}

  build_el9_rpm:
    if: false
    name: Build EL9 RPM
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

        ### start manpage generation
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.10.13

      - name: Install dependencies
        run: |
          pip install argparse-manpage six pexpect

      - name: Install python3-rpm and python3-dnf package with apt-get
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-rpm python3-dnf

      - name: Generate Manpages
        run: |
          chmod +x scripts/manpage_generation.sh
          bash scripts/manpage_generation.sh
        ### end manpage generation

      - name: Build RPM package for EL9
        id: rpm_build_el9
        uses: oamg/rpmbuild@el9
        with:
          spec_path: "packaging/convert2rhel.spec"

      - name: Upload EL9 RPM as release asset
        id: upload_release_asset_el9
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ steps.rpm_build_el9.outputs.rpm_path }}
          asset_name: ${{ steps.rpm_build_el9.outputs.rpm_name }}
          asset_content_type: ${{ steps.rpm_build_el9.outputs.content_type }}
